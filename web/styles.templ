package web

css InventoryListing() {
	display: grid;
	grid-template-columns: 1fr;
	grid-gap: 1rem;
	margin-top: 1rem;
}

css Listing() {
	display: grid;
	grid-template-columns: var(--grid-cols);
	grid-gap: 1rem;
	margin-top: 1rem;
}

css NoOverFlow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	display: block;
	max-width: 10rem;
}

css Card() {
	align-items: center;
	max-height: 5rem;
	text-align: left;
	padding: 1rem;
}

css CardImg() {
	width: 4rem;
	height: 4rem;
	objject-fit: cover;
	border-radius: var(--border-radius);
	box-shadow: var(--box-shadow);
	border: 1px solid var(--color-accent-red);
}

css CardTitle() {
	font-size: .75rem;
	margin: 0 0 0.5rem 0;
	color: var(--color-primary);
}

css CardLocation() {
	font-size: 0.5rem;
	margin: 0 0 0.5rem 0;
}

css CardDescription() {
	font-size: 0.5rem;
	margin: 0 0 0.5rem 0;
}

css CardDetailsSection() {
	width: 50%;
}

css CardImgSection() {
	margin-left: 0.5rem;
}

css Nav() {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	margin-bottom: 1rem;
}

css Row() {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
}

css Column() {
	display: flex;
	flex-direction: column;
}

css ContainerSecondary() {
	background-color: var(--color-secondary);
	border: 1px solid var(--color-accent-green);
	color: var(--color-primary);
	border-radius: var(--border-radius);
	box-shadow: var(--box-shadow);
}

css ContainerPrimary() {
	background-color: var(--color-primary);
	border: 1px solid var(--color-accent-red);
	color: var(--color-secondary);
	border-radius: var(--border-radius);
	box-shadow: var(--box-shadow);
}

css ContainerHeader() {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

css LandingContainer() {
	min-height: 82vh;
	font-size: 1.3rem;
	padding: 1rem;
}

css Input() {
	border-radius: var(--border-radius);
	border: 1px solid var(--color-accent-red);
	background-color: var(--color-primary);
	color: var(--color-secondary);
	padding: 0.5rem;
	margin-bottom: .5rem;
	width: -webkit-fill-available;
	display: block;
	box-shadow: var(--box-shadow);
}

css InputSecondary() {
	border-radius: var(--border-radius);
	border: 1px solid var(--color-accent-green);
	background-color: var(--color-secondary);
	color: var(--color-primary);
	padding: 0.5rem;
	margin-bottom: .5rem;
	width: -webkit-fill-available;
	display: block;
	box-shadow: var(--box-shadow);
}

css InputLabel() {
	display: flex;
	align-self: flex-start;
	margin: 0.25rem;
}

css InputSmall() {
	height: 2rem;
}

css InputBig() {
	height: 5rem;
}

css FieldDescriptor() {
	display: flex;
	align-self: flex-start;
	padding-left: 0.5rem;
	margin: 0.25rem 0;
}

css FieldLabel() {
	margin-top: 0;
}

css CreateBtn() {
	background-color: var(--color-secondary);
	color: var(--color-primary);
	border: 1px solid var(--color-accent-green);
	width: 7rem;
	min-height: 3rem;
	margin: 2rem;
	font-size: 1.25rem;
}

css EditBtn() {
	padding-top: 0.5rem;
	min-height: 2rem;
	min-width: 4rem;
	margin: 1rem 0;
}

css DeleteBtn() {
	padding-top: 0.5rem;
	min-height: 2rem;
	min-width: 5rem;
	margin: 1rem 0;
}

css Btn() {
	align-self: center;
	background-color: var(--color-primary);
	color: var(--color-secondary);
	border-radius: var(--border-radius);
	border: 1px solid var(--color-accent-red);
	box-shadow: var(--box-shadow);
	cursor: pointer;
}

css BtnSecondary() {
	align-self: center;
	background-color: var(--color-secondary);
	color: var(--color-primary);
	border-radius: var(--border-radius);
	border: 1px solid var(--color-accent-green);
	box-shadow: var(--box-shadow);
	cursor: pointer;
}

css BtnWarn() {
	align-self: center;
	background-color: var(--color-accent-red);
	border: 1px solid var(--color-accent-green);
	border-radius: var(--border-radius);
	color: var(--color-secondary);
	box-shadow: var(--box-shadow);
	cursor: pointer;
}

css SpaceBetween() {
	display: flex;
	justify-content: space-between;
}

css InventoryItemName() {
	height: 1rem;
}

css Error() {
	color: var(--color-accent-red);
}

css Padded() {
	padding: 1rem;
}

templ globalStyles() {
	<style type="text/css">
        :root {
            --color-primary: #002A32;
            --color-secondary: #C9C19F;
            --color-accent-green: #4B5842;
            --color-accent-red: #764248;
            --color-accent-grey: #888DA7;
            --font-family: "Outfit", sans-serif;
            --border-radius: 0.5rem;
            --box-shadow: 4.0px 8.0px 8.0px hsl(0deg 0% 0% / 0.38);
            --font-size: 1rem;
            --grid-cols: 1fr;
            --overflow-width: 5rem;

            color: var(--color-secondary);
            background-color: var(--color-primary);
            font-size: var(--font-size);

            color-scheme: dark;
            font-synthesis: none;
            font-optical-sizing: auto;
            text-rendering: optimizeLegibility;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        * {
            font-family: var(--font-family);
        }

        body {
          margin: 0;
          display: flex;
          place-items: center;
        }

        @media (min-width: 768px) {
            :root {
                --font-size: 1.2rem;
                --grid-cols: 1fr 1fr;
            }

            body {
                padding: 0 25%;
            }
        }

        #app {
          width: 90vw;
          height: 100%;
          margin: 0 auto;
          padding: 0.75rem;
          text-align: center;
        }

        .hover-primary{
          transition: all .5s;
        }

        .hover-secondary{
          transition: all .5s;
        }

        .hover-secondary:hover{
          background-color: var(--color-secondary);
          border: 1px solid var(--color-accent-green);
          color: var(--color-primary);
          transition: all .5s;
          transform : translateY(-0.2rem);
        }

        .hover-primary:hover{
          background-color: var(--color-primary);
          border: 1px solid var(--color-accent-red);
          color: var(--color-secondary);
          transition: all .5s;
          transform : translateY(-0.2rem);
        }

    </style>
}

func stylesMap() map[templ.CSSClass]struct{} {
	return map[templ.CSSClass]struct{}{
		// styles.templ
		InventoryListing():   {},
		Listing():            {},
		NoOverFlow():         {},
		Card():               {},
		CardImg():            {},
		CardTitle():          {},
		CardLocation():       {},
		CardDescription():    {},
		CardDetailsSection(): {},
		CardImgSection():     {},
		Nav():                {},
		Row():                {},
		Column():             {},
		ContainerSecondary(): {},
		ContainerPrimary():   {},
		ContainerHeader():    {},
		LandingContainer():   {},
		Input():              {},
		InputSecondary():     {},
		InputLabel():         {},
		InputBig():           {},
		InputSmall():         {},
		FieldDescriptor():    {},
		FieldLabel():         {},
		CreateBtn():          {},
		EditBtn():            {},
		DeleteBtn():          {},
		Btn():                {},
		BtnSecondary():       {},
		SpaceBetween():       {},
		InventoryItemName():  {},
		Error():              {},
		Padded():             {},
		// base.templ
		HeaderLink():  {},
		HeaderBrand(): {},
		Warning():     {},
		// garden.templ
		FieldsContainer():  {},
		Fields():           {},
		LocationField():    {},
		DescriptionField(): {},
		GardenImg():        {},
		// gardenListing.templ
		GardenCreateLink(): {},
		NoGardens():        {},
		// gardenInventoryItem.templ
		ItemAndType():    {},
		InventoryField(): {},
		ItemImg():        {},
		ItemLabel():      {},
		// imageUploader.templ
		ImageUploaderLabel(): {},
		UploaderContainer():  {},
		GardenPic():          {},
		// landing.templ
		FeatureDescriptor(): {},
		Features():          {},
		Cta():               {},
		// search.templ
		SearchInput(): {},
		SearchForm():  {},
		// sign-in.templ
		SignInContainer(): {},
		SignInForm():      {},
		SignInBtn():       {},
		SignUpLink():      {},
		PasswordLink():    {},
		// sign-up.templ
		SignUpContainer(): {},
		SignUpForm():      {},
	}
}

func Styles() []templ.CSSClass {
	m := stylesMap()
	s := make([]templ.CSSClass, 0, len(m))
	for k := range m {
		s = append(s, k)
	}
	return s
}
